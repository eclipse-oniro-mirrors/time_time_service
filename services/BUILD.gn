# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/time/time_service/time.gni")
import("//foundation/distributeddatamgr/relational_store/relational_store.gni")

config("time_service_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "//base/time/time_service/interfaces/innerkits/include",
    "../utils/native/include",
    "time_manager/include",
    "timer/include",
    "dfx/include",
    "//utils/system/safwk/native/include",
    "//third_party/json/include",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
    "${relational_store_innerapi_path}/rdb/include/",
    "${relational_store_innerapi_path}/appdatafwk/include/",
  ]
}

ohos_shared_library("time_service") {
  configs = [ "${time_utils_path}:utils_config" ]

  public_configs = [
    "//commonlibrary/c_utils/base:utils_config",
    "//third_party/jsoncpp:jsoncpp_public_config",
    ":time_service_config",
  ]

  sources = [
    "dfx/src/time_cmd_dispatcher.cpp",
    "dfx/src/time_cmd_parse.cpp",
    "dfx/src/time_sysevent.cpp",
    "time_manager/src/itimer_info.cpp",
    "time_manager/src/net_conn_callback_observer.cpp",
    "time_manager/src/nitz_subscriber.cpp",
    "time_manager/src/ntp_trusted_time.cpp",
    "time_manager/src/ntp_update_time.cpp",
    "time_manager/src/sntp_client.cpp",
    "time_manager/src/time_service.cpp",
    "time_manager/src/time_service_client.cpp",
    "time_manager/src/time_service_notify.cpp",
    "time_manager/src/time_service_proxy.cpp",
    "time_manager/src/time_service_stub.cpp",
    "time_manager/src/time_tick_notify.cpp",
    "time_manager/src/time_zone_info.cpp",
    "time_manager/src/timer_call_back.cpp",
    "time_manager/src/timer_call_back_proxy.cpp",
    "time_manager/src/timer_call_back_stub.cpp",
    "timer/src/batch.cpp",
    "timer/src/timer_handler.cpp",
    "timer/src/timer_info.cpp",
    "timer/src/timer_manager.cpp",
  ]

  deps = [
    "${ability_runtime_path}/frameworks/native/ability/native:abilitykit_native",
    "${time_utils_path}:time_utils",
    "//foundation/communication/netmanager_base/interfaces/innerkits/netconnclient:net_conn_manager_if",
    "//third_party/jsoncpp:jsoncpp",
  ]
  external_deps = [
    "ability_base:want",
    "ability_runtime:runtime",
    "ability_runtime:wantagent_innerkits",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "eventhandler:libeventhandler",
    "hisysevent_native:libhisysevent",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "relational_store:native_appdatafwk",
    "relational_store:native_dataability",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]
  part_name = "time_service"
  subsystem_name = "time"
}
